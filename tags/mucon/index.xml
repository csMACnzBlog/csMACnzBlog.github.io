<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>mucon on csMACnz&#39;s Blog</title>
    <link>https://csmacnzblog.github.io/tags/mucon/</link>
    <description>Recent content in mucon on csMACnz&#39;s Blog</description>
    <image>
      <url>https://csmacnzblog.github.io/favicon.png</url>
      <title>csMACnz&#39;s Blog</title>
      <link>https://csmacnzblog.github.io</link>
    </image>
    <ttl>1440</ttl>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-nz</language>
    <lastBuildDate>Fri, 31 May 2019 10:00:00 +0000</lastBuildDate><atom:link href="https://csmacnzblog.github.io/tags/mucon/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>µCon 2019 - Day 3</title>
      <link>https://csmacnzblog.github.io/post/mucon-2019-part2/</link>
      <pubDate>Fri, 31 May 2019 10:00:00 +0000</pubDate>
      
      <guid>https://csmacnzblog.github.io/post/mucon-2019-part2/</guid>
      <description>&lt;p&gt;Good morning day 3. So much to absorb already from &lt;a href=&#34;https://csmacnzblog.github.io/mucon-2019-part1/&#34;&gt;Day 1 and 2&lt;/a&gt; but it isn&amp;rsquo;t over yet.&lt;/p&gt;
&lt;p&gt;This morning&amp;rsquo;s Keynote &amp;ldquo;Crossing the River by Feeling the Stones&amp;rdquo; from &lt;a href=&#34;https://twitter.com/swardley&#34;&gt;Simon Wardley&lt;/a&gt; is a must see. This was a very educational look at the value of maps, and the importance of knowing the landscape, looking at Evolutionary Flow and not just Process Flow when looking at optimisations. I would recommend the talk from Susanne Kaiser &amp;ldquo;Preparing for a future Microservices journey&amp;rdquo; from the day before as a nice companion to this keynote talk, as she used &amp;ldquo;Wardley Maps&amp;rdquo; to specifically look at the evolution towards microservices. (Though this keynote also shows that journey towards the end as well).&lt;/p&gt;
&lt;p&gt;&amp;ldquo;Exploring your Microservices Architecture Through Graph Theory&amp;rdquo; from &lt;a href=&#34;https://twitter.com/techiewatt&#34;&gt;Nicki Watt&lt;/a&gt; was a great look at applying Graph Theory to distributed systems, especially with Microservices to gain insight into where architectural smells may exist using different analysis metrics.&lt;/p&gt;
&lt;p&gt;The before lunch slot was &amp;ldquo;Awesome CI/CD Data Pipelines for Distributed Data-Sources&amp;rdquo; from &lt;a href=&#34;https://twitter.com/ChrisBurrell7&#34;&gt;Chris Burrell&lt;/a&gt;. This was a walkthrough of mining data sources (load and transform) from Microservices into RedShift in a pipeline approach.&lt;/p&gt;
&lt;p&gt;&amp;ldquo;An Engineer&amp;rsquo;s Guide to a Good Night&amp;rsquo;s Sleep&amp;rdquo; had &lt;a href=&#34;https://twitter.com/NickyWrightson&#34;&gt;Nicky Wrightson&lt;/a&gt; giving a great Engineers Guide to Ops approach to building software, with 5 rules for building better systems so you don&amp;rsquo;t have to be woken up at 3 am. Slides available here: &lt;a href=&#34;https://speakerdeck.com/nickywrightson&#34;&gt;https://speakerdeck.com/nickywrightson&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://twitter.com/matthiasnoback&#34;&gt;Matthias Noback&lt;/a&gt; presented &amp;ldquo;Beyond Design Principles and Patterns: Writing Good Object-Oriented Code&amp;rdquo; which was a great look at Object-Oriented code done right, in a nice succinctly laid out path from the ground up. I want to steal the whole thing as a blog post it was so well put together. Although there were code examples (Java?), the concepts given transcended across any OO language and presented in a nice language-agnostic way. Unfortunately, I didn&amp;rsquo;t learn anything new, and I also had nothing to disagree with either.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://twitter.com/mufridk&#34;&gt;Mufrid Krilic&lt;/a&gt; gave an interesting Lightning Talk: &amp;ldquo;Domain Model in Multi-Language Environment with Examples from Healthcare&amp;rdquo; which was a brief conversation about ubiquitous language when your code is in English but your domain is in Norwegian. This was from experience with a hospital software system.&lt;/p&gt;
&lt;p&gt;To round out the weeks Lightning Talks was &amp;ldquo;Don&amp;rsquo;t Rebuild your Monolith!&amp;rdquo; by &lt;a href=&#34;https://twitter.com/PeterAnning&#34;&gt;Peter Anning&lt;/a&gt;. An epic tale of transformation from Monolith, to Microservices, regrets and reaffirmations. An entertaining watch with the takeaway that processes like DevOps, Agile and Ubiquitous Langage that come out of moving to microservices must be maintained and assimilated, lest we forget and the monolith grows back.&lt;/p&gt;
&lt;p&gt;And last but not least, we have the final Keynote: &amp;ldquo;Temporal Modelling&amp;rdquo; from &lt;a href=&#34;https://twitter.com/mathiasverraes&#34;&gt;Mathias Verraes&lt;/a&gt;. A really good overview conversation into Event-based systems, Event Storming and why modelling the Events of your system is of greater benefit than to use Entity Modelling instead. Another recommended one to expand your thinking.&lt;/p&gt;
&lt;h2 id=&#34;summary&#34;&gt;Summary&lt;/h2&gt;
&lt;p&gt;And that&amp;rsquo;s a wrap! 2019 µCon is done and dusted. Lots to take in, lots to revisit from the recordings, and a bunch of sessions missed that need to be watched.&lt;/p&gt;
&lt;p&gt;The amazing crew doing the filming have been working away getting all the videos up as quickly as possible (on the day recorded for the most part!). You can head over to Skills Matter and watch them all from the links provided off of the &lt;a href=&#34;https://skillsmatter.com/conferences/11982-con-london-2019-the-conference-on-microservices-ddd-and-software-architecture#program&#34;&gt;Schedule here&lt;/a&gt;. Take this and &lt;a href=&#34;https://csmacnzblog.github.io/mucon-2019-part1/&#34;&gt;the previous part&lt;/a&gt; as a guide for where to begin but continue through all the other amazing talks I didn&amp;rsquo;t have time to attend in person as well.&lt;/p&gt;
&lt;p&gt;Happy Learning!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>µCon 2019 - Day 1 &amp; 2</title>
      <link>https://csmacnzblog.github.io/post/mucon-2019-part1/</link>
      <pubDate>Thu, 30 May 2019 20:05:21 +0000</pubDate>
      
      <guid>https://csmacnzblog.github.io/post/mucon-2019-part1/</guid>
      <description>&lt;p&gt;After a restful night at a London hotel (I learned my lesson from the last time I came in for a London conference) coffee and breakfast at the Business Design Centre in London, muCon 2019 kicks off. muCon (or µCon) is a Conference on Microservices, DDD &amp;amp; Software Architecture. From what I gather, this year for the first time it is an amalgamation of a DDD and Microservices conference into one. I&amp;rsquo;m here for three days. At this point, I&amp;rsquo;ve gotten into a rhythm of blogging about my Conference Experiences so here we go again!&lt;/p&gt;
&lt;h2 id=&#34;day-1&#34;&gt;Day 1&lt;/h2&gt;
&lt;p&gt;We kick off with an excellent keynote from &lt;a href=&#34;https://twitter.com/mfeathers&#34;&gt;Michael Feathers&lt;/a&gt; which captures various ideologies and principles applied to team and code architecture both at the class level, microservice level and interpersonal individual and team level as well.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;As usual, the day is split into tracks, so I can only give experience on where I&amp;rsquo;ve been and guidance of which speakers and talks I would look out for in the future.&lt;/p&gt;
&lt;p&gt;Following on from the keynote for me was &amp;ldquo;Microservices from Day One&amp;rdquo; from &lt;a href=&#34;https://twitter.com/rjrodger&#34;&gt;Richard Rodger&lt;/a&gt;. First-hand experience of building Microservices on a greenfields startup after &lt;a href=&#34;https://www.manning.com/books/the-tao-of-microservices&#34;&gt;literally writing a book on Microservices&lt;/a&gt; development, a chance to practice what he preached.  An interesting takeaway that I liked was to design a message-centric system of components(microservices) and then the transport/routing layer doesn&amp;rsquo;t matter (from a technology point of view). This resonates with me because it aligns nicely with the Ports and Adapters architecture.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;Next up, and filling the pre-lunch slot was &amp;ldquo;Creating an Effective Developer Experience for Cloud-Native Apps&amp;rdquo; from &lt;a href=&#34;https://twitter.com/danielbryantuk&#34;&gt;Daniel Bryant&lt;/a&gt;. A great introduction and overview of DevEx, the idea of building a great experience for developers from coding to prod and beyond in the modern world of cloud-native, Kubernetes and Serverless. Whether it is &amp;ldquo;build or buy&amp;rdquo;, cloud or in-house hosting, the story for developers to build, debug, test, deploy and monitor should be a first-class consideration of developing software.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&amp;ldquo;The Gordian Knot&amp;rdquo; from &lt;a href=&#34;https://twitter.com/ziobrando&#34;&gt;Alberto Brandolini&lt;/a&gt; the importance of culture and the influence architecture plays on affecting that culture. Very interesting and a nice perspective on Conway&amp;rsquo;s Law in many ways, and thinking about affecting change.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&amp;ldquo;Strategic Domain-Driven Design Patterns&amp;rdquo; from &lt;a href=&#34;https://twitter.com/ntcoding&#34;&gt;Nick Tune&lt;/a&gt; was an interesting discussion on DDD grouping. Definitely a topic I need to read the (blue) book on, literally and figuratively. (Although I am told one does not simply &amp;ldquo;read&amp;rdquo; Eric Evans&#39; Domain Drive Design&amp;hellip;) Some very high-level patterns and approaches to help with finding groupings in your system.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&amp;ldquo;Event Driven Collaboration&amp;rdquo; from &lt;a href=&#34;https://twitter.com/ICooper&#34;&gt;Ian Cooper&lt;/a&gt; another look at the &lt;a href=&#34;https://blog.csmac.nz/geeking-out-at-altnetbrum-2018/#referencedataarchitecture&#34;&gt;Reference Data concept&lt;/a&gt;, with some practical examples of what and how you might go about implementing this. A revision on the concepts of inside mutable data Vs outside immutable data, events, messages and caching.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;The day wound down with a couple of Lightning Talks. A standout for me was &amp;ldquo;Continuous Visibility, No More Dashboards!&amp;rdquo; From &lt;a href=&#34;https://twitter.com/JBJamesBrownJB&#34;&gt;James Brown&lt;/a&gt; on Continuous Visibility (CV). Using Alerts and notifications more, and only selectively add trends and maybe CI statuses to a physical dashboard where space is a premium (but don&amp;rsquo;t forget to add GIfs!).&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;day-2&#34;&gt;Day 2&lt;/h2&gt;
&lt;p&gt;Day 2 kicks off with another leading Keynote: &amp;ldquo;Getting to DDD: Pragmatic or Principled?&amp;rdquo; from
&lt;a href=&#34;https://twitter.com/julielerman&#34;&gt;Julie Lerman&lt;/a&gt;. Julie gave a discussion on the DDD journey, engaging with new adopters, and how building on the concepts with a group slowly can be a great way to bring more people on board, without getting hung up on being too principled or having to be all in with everything DDD at once.&lt;/p&gt;
&lt;p&gt;&amp;ldquo;Preparing for a future Microservices journey&amp;rdquo;
from &lt;a href=&#34;https://twitter.com/suksr&#34;&gt;Susanne Kaiser&lt;/a&gt; presented a journey from custom build through Microservices to Serverless taking all aspects of a hosted piece of software and it&amp;rsquo;s infrastructure concerns transitioning through Build vs Buy, to commoditization.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&amp;ldquo;Observable Microservices&amp;rdquo; from &lt;a href=&#34;https://twitter.com/mariascandella&#34;&gt;Maria Gomez&lt;/a&gt; went through the what of observability (logs, alerts and tracing) along with the &amp;lsquo;why&amp;rsquo; for the value it provides to you once your services are in production.&lt;/p&gt;
&lt;p&gt;After lunch, &lt;a href=&#34;https://twitter.com/duffleit&#34;&gt;David Leitner&lt;/a&gt; presented &amp;ldquo;Micro Frontends – A Strive for Fully Verticalized Systems&amp;rdquo;. A nice definition of MicroFrontends and example architectures to add to your toolbox of &amp;ldquo;it depends&amp;rdquo; solutions. Very clearly outlined the when and where the different approaches are applicable. Definitely check out his work if your thinking about verticalized splitting your frontend.&lt;/p&gt;
&lt;p&gt;This led into the afternoon Workshop: &amp;ldquo;Show me the Kubernetes&amp;rdquo; with &lt;a href=&#34;https://twitter.com/denhamparry&#34;&gt;Lewis Denham-Parry&lt;/a&gt; and &lt;a href=&#34;https://twitter.com/SoulmanIqbal&#34;&gt;Salman Iqbal&lt;/a&gt;. They walked us through the demos at &lt;a href=&#34;https://github.com/CloudNativeWales/ShowMeTheKubernetes&#34;&gt;github.com/CloudNativeWales/ShowMeTheKubernetes&lt;/a&gt; which worked well on a temporarily spun up cluster on Azure, or with a Minikube locally (instructions included in both cases). Further examples were promised so there might be more than the three we went through in the session.&lt;/p&gt;
&lt;p&gt;To round out the second day was a keynote from &lt;a href=&#34;https://twitter.com/dianamontalion&#34;&gt;Diana Montalion&lt;/a&gt; on Making a Case for Conceptual Integrity. I&amp;rsquo;m not too proud to admit that I didn&amp;rsquo;t understand the term &amp;ldquo;conceptual integrity&amp;rdquo; at the end and couldn&amp;rsquo;t give you the definition. However, the topic was very interesting and the steps discussed to reach the definition given were very useful and interesting in themselves that to me it didn&amp;rsquo;t matter. Maybe I&amp;rsquo;m lacking the experience at this stage to accurately grok this, and others with more systems consulting experience and exposure did.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;summary&#34;&gt;Summary&lt;/h2&gt;
&lt;p&gt;Of course, most if not all of the talks were recorded and appear online (links added where available) but as usual you have missed the hallway conversations by not being here. These are usually the best part of any conference and this has been no exception.  One great conversation leads to quoting the statement that never had anyone said or seen a system that would be described as too gold plated, or too well tested. Most systems instead suffer from not being of a good enough quality or lacking in test coverage.&lt;/p&gt;
&lt;p&gt;In other conversations being able to share structures and strategies gives insight into what is or isn&amp;rsquo;t working for other teams and companies and gives a relative look at where they are on their journey compared to you with yours. But based on the guidance and experience of others here, we all seem to be heading in a similar direction through SOA to DDD and Microservices.&lt;/p&gt;
&lt;p&gt;Stay tuned for a summary of my day 3 experience.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>