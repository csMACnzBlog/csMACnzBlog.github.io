<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tools on csMACnz&#39;s Blog</title>
    <link>https://blog.csmac.nz/tags/tools/</link>
    <description>Recent content in Tools on csMACnz&#39;s Blog</description>
    <image>
      <url>https://blog.csmac.nz/favicon.png</url>
      <title>csMACnz&#39;s Blog</title>
      <link>https://blog.csmac.nz</link>
    </image>
    <ttl>1440</ttl>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-nz</language>
    <lastBuildDate>Mon, 04 Jun 2018 07:00:00 +0000</lastBuildDate><atom:link href="https://blog.csmac.nz/tags/tools/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Coveralls.Net 1.0.0 Release</title>
      <link>https://blog.csmac.nz/post/coveralls-net-1-0-0-release/</link>
      <pubDate>Mon, 04 Jun 2018 07:00:00 +0000</pubDate>
      
      <guid>https://blog.csmac.nz/post/coveralls-net-1-0-0-release/</guid>
      <description>&lt;p&gt;Christmas 2014. I was building out projects on GitHub in open source. The obsession with open source even went on to spawn a &lt;a href=&#34;https://blog.csmac.nz/-net-os-1-source-control/&#34;&gt;Series of Blog Posts&lt;/a&gt;. Each tool or library I was building lead onto another tool or library to make the build pipeline, or development process better. Often putting down one project while I sorted out another one first.  This has continued at a slow pace for the last 3 years.&lt;/p&gt;
&lt;p&gt;Back in January 2015 I &lt;a href=&#34;https://blog.csmac.nz/introducing-coveralls-net/&#34;&gt;Announced Coveralls.Net&lt;/a&gt;. This is a code coverage publisher for publishing your coverage results to the coveralls.io API. Coveralls.io is a coverage tracking service, which is free for open source projects, with a paid service for private use, and now an Enterprise version as well. There was a bunch of python and ruby versions, but I wanted fewer dependencies on those runtimes so built my own.  I even managed to get it listed as one of the two &lt;a href=&#34;https://docs.coveralls.io/dot-net&#34;&gt;recommended .Net coverage integrations&lt;/a&gt; on the coveralls.io docs.&lt;/p&gt;
&lt;p&gt;While development has been a slow work of labour over the last three years, the announcement of dotnet CLI tools (proper npm-style tools, not the weird interim dotnet-tool stuff&amp;hellip;) with dotnet SDK 2.1, I had to jump in and get on board.&lt;/p&gt;
&lt;h3 id=&#34;announcing-100&#34;&gt;Announcing 1.0.0&lt;/h3&gt;
&lt;p&gt;Which brings me to announcing Coveralls.Net 1.0.0. This is a dotnet CLI tools compatible version of &lt;code&gt;csmacnz.Coveralls&lt;/code&gt;. Easier to install. Easier to update. And a whole bunch new features, including more coverage options, and better autodetection processes in AppVeyor.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# install globally
dotnet tool install -g coveralls.net --version 1.0.0

# if installed globally, this should just be available on your path
csmacnz.coveralls &amp;lt;args&amp;gt;

# install into a local folder
dotnet tool install coveralls.net --version 1.0.0 --tools-path tools

# if installed into a tools path, you can run it from there.
.\tools\csmacnz.Coveralls &amp;lt;args&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Now, I&amp;rsquo;ve been struggling a bit with beta 0.8.0. It hasn&amp;rsquo;t been easy to find time to test the new stuff I added, get others to test, and be happy to call it a stable release. But there was a bunch of new stuff and fixes in there. These have all rolled forward into the 1.0.0 Release now. (I might go back and call 0.8.0 stable now since it still works the old way. But for now the old way still works with stable &lt;code&gt;0.7.0&lt;/code&gt; and &lt;code&gt;0.8.0-beta003&lt;/code&gt;.)&lt;/p&gt;
&lt;p&gt;Still not happy/comfortable with using CLI tools? Not using 2.1? That&amp;rsquo;s ok. I&amp;rsquo;ve used the power of the &lt;a href=&#34;https://blog.csmac.nz/dotnetcore2-self-contained-applications/&#34;&gt;self-contained app&lt;/a&gt; to provide a &lt;code&gt;windows&lt;/code&gt;, &lt;code&gt;linux&lt;/code&gt; and &lt;code&gt;osx&lt;/code&gt; native version (Linux targets the cross-compat Linux target) in a zip file under &lt;a href=&#34;https://github.com/csMACnz/coveralls.net/releases/tag/1.0.0&#34;&gt;the Releases folder on GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For windows in PowerShell you would use it something like this:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# The TLS change was necessary on my development machine
[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12

$zipDownloadPath=&amp;#34;https://github.com/csMACnz/coveralls.net/releases/download/1.0.0/coveralls.net.1.0.0-windows.zip&amp;#34;
Invoke-WebRequest -UseBasicParsing $zipDownloadPath -OutFile coveralls-windows.zip
mkdir coveralls-windows
Expand-Archive .\coveralls-windows.zip coveralls-windows

.\coveralls-windows\csmacnz.Coveralls.exe
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;I hope to get more details added on the GitHub Wiki for linux and mac usage of the self-contained app, as well as updating all the samples over at &lt;a href=&#34;https://github.com/csMACnz/Coveralls.net-Samples/&#34;&gt;Coveralls.net-Samples&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;more-targets&#34;&gt;More targets&lt;/h3&gt;
&lt;p&gt;Since the first release, targeting OpenCover coverage files (the most popular at the time), this has been expanded to include Visual Studio Coverage, monocov, Report Generator, Chutzpah javascript coverage, lcov, NCover and &lt;a href=&#34;https://github.com/tonerdo/coverlet&#34;&gt;Coverlet&lt;/a&gt; cross-platform .Net coverage (via its opencover file format).&lt;/p&gt;
&lt;h3 id=&#34;whats-next&#34;&gt;What&amp;rsquo;s Next?&lt;/h3&gt;
&lt;p&gt;I&amp;rsquo;ve already started working on 1.1.0 while the dotnet 2.1 tools have been working towards stable.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Better autodetection functionality (including Travis and TeamCity)&lt;/li&gt;
&lt;li&gt;dotcover support&lt;/li&gt;
&lt;li&gt;parallel build support&lt;/li&gt;
&lt;li&gt;add native coverlet support&lt;/li&gt;
&lt;li&gt;Bug fixes that didn&amp;rsquo;t make it to 1.0.0&lt;/li&gt;
&lt;li&gt;Complete and test Enterprise support&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Hopefully, it won&amp;rsquo;t be soon before long that you will see an Announcing 1.1.0 Post.&lt;/p&gt;
&lt;p&gt;Interested in following progress on this? I have a twitter account &lt;a href=&#34;https://twitter.com/coverallsdotnet&#34;&gt;@coverallsdotnet&lt;/a&gt; That I am trying to be more proactive with.  You can also track progress on the &lt;a href=&#34;https://github.com/csMACnz/coveralls.net&#34;&gt;GitHub Project&lt;/a&gt;.  Contributions welcome, though I hear I&amp;rsquo;m a bit of a stickler for quality and such. C&amp;rsquo;est la vie.&lt;/p&gt;
&lt;p&gt;The irony of a coverage publishing tool only having 42% coverage wasn&amp;rsquo;t lost on me, so I got it up to 74%. Soon enough I should get that to 100%. Probably just in time for a version 2.0.0.&lt;/p&gt;
&lt;h3 id=&#34;need-more&#34;&gt;Need more?&lt;/h3&gt;
&lt;p&gt;Issues, feature requests or feedback? Just write up an issue on GitHub. I would love to hear your experience of using the tool, and I would love to expand the supported coverage formats to include your favourite tool.&lt;/p&gt;
&lt;p&gt;Thanks for using it! It makes me more inclined to make it awesome.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Mockups and Sketches - Overview</title>
      <link>https://blog.csmac.nz/post/mockups-and-sketches-overview/</link>
      <pubDate>Wed, 02 May 2012 09:25:39 +0000</pubDate>
      
      <guid>https://blog.csmac.nz/post/mockups-and-sketches-overview/</guid>
      <description>&lt;p&gt;This is part of a wireframing series&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Overview&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;First Draft&lt;/li&gt;
&lt;li&gt;Balsamiq&lt;/li&gt;
&lt;li&gt;Blend with Sketchflow&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is a companion post to my talk at &lt;a href=&#34;http://www.welli.net.nz/&#34; title=&#34;Welli.Net&#34;&gt;welliDotNet&lt;/a&gt;, Wellington&amp;rsquo;s .Net User Group on Wednesday 4th April 2012. The slides can be &lt;a href=&#34;http://res.cloudinary.com/csmacnz/image/upload/v1414477193/welliDotNet_MockupsAndSketches_qbs7gj.pdf&#34;&gt;downloaded here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I want to give you a brief introduction to creating designs and mockups for applications from a developers point-of-view, to enlighten other developers on the cool tools available and to inform designers that there are tools out there that can create great UX prototypes for clients, that you don&amp;rsquo;t have to be a developer to use. I will focus on two tools, Balsamiq&amp;rsquo;s Mockups, and Microsoft&amp;rsquo;s Expression Blend with Sketchflow.  Both of these are paid tools, and both have time limited trials available to use. I will also put some resources down that make mocking up a bit more fun.&lt;/p&gt;
&lt;h2 id=&#34;balsamiq-mockups&#34;&gt;Balsamiq Mockups&lt;/h2&gt;
&lt;p&gt;Balsamiq is a &lt;a href=&#34;http://www.balsamiq.com/company&#34; title=&#34;Balsamiq Company info&#34;&gt;small distributed company&lt;/a&gt;, that make a neat piece of wireframing software called Mockups. There are a few flavours of this; a web based online version, a desktop version and a &lt;a href=&#34;http://www.balsamiq.com/products/mockups/fogbugz&#34; title=&#34;Balsamiq plugin for fogbugs&#34;&gt;few plugin versions for SAAS products like fogbugs&lt;/a&gt;. I haven&amp;rsquo;t had much to do with their web version but have been using the desktop one a lot recently while design new screens for my current client. &lt;a href=&#34;http://res.cloudinary.com/csmacnz/image/upload/v1414277563/balsamiq1_r9nppm.png&#34;&gt;&lt;img src=&#34;http://res.cloudinary.com/csmacnz/image/upload/v1414277563/balsamiq1_r9nppm.png&#34; alt=&#34;Balsamiq Mockups&#34; title=&#34;balsamiq&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Some of the great features of Mockups I have seen so far are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://support.balsamiq.com/customer/portal/articles/110121&#34; title=&#34;Working with Text &#34;&gt;Text Markup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;add italics, strikeouts and hyperlink styles and more to your text&lt;/li&gt;
&lt;li&gt;Tab Controls, Button lists&lt;/li&gt;
&lt;li&gt;UI Chrome such as Browser navigation etc.&lt;/li&gt;
&lt;li&gt;Icons&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blogs.balsamiq.com/ux/2010/07/15/mockup-tips-datagrids-and-specifying-interaction/&#34; title=&#34;Mockups Datagrid&#34;&gt;Datagrid Control&lt;/a&gt; - create quick simple data grids with advanced markup options&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://support.balsamiq.com/customer/portal/articles/117785-using-dropbox-for-near-real-time-collaboration&#34; title=&#34;Dropbox Collaboration&#34;&gt;Dropbox Integration&lt;/a&gt; -collaborate on wireframes by leveraging the power of Dropbox&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blogs.balsamiq.com/product/2009/03/01/iphone-controls-new-icons-and-much-more/&#34; title=&#34;iPhone Support&#34;&gt;iPhone Support&lt;/a&gt; - make your iPhone wireframes look awesome and iPhone like with sketch keyboards and outlines&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And that&amp;rsquo;s just to name a few.  I&amp;rsquo;ve found that there is a great variety of controls available, and I could build most of the UI I needed from controls out of the box.&lt;/p&gt;
&lt;p&gt;As well as UI, there are Markup elements that can be used to annotate your wireframes, and these can be turned on or off when viewing, or generating images.  On the side of generating, you can generate pngs, or inter-linked pdf files from your mockups, which include clickable parts of the UI that will link to other screens.  You can also go into full screen presentation mode and show off your designs.&lt;/p&gt;
&lt;p&gt;I could go on and on, there is so much it can do, and it will be sure to do even more as new versions are released.  There are trials for both the online and desktop versions so I would recommend &lt;a href=&#34;http://www.balsamiq.com/products/mockups&#34; title=&#34;Balsamiq Mockups&#34;&gt;giving them a go&lt;/a&gt;.  I will follow this quick informational session with a post dedicated to using Balsamiq Mockups soon. If you can&amp;rsquo;t find the control you need, I found these great resources and plenty more on &lt;a href=&#34;https://mockupstogo.mybalsamiq.com/projects&#34; title=&#34;Mockups To Go&#34;&gt;Mockups To Go&lt;/a&gt;, including WP7 templates and templates for other mobile platforms.  If you the price seems a bit steep, maybe &lt;a href=&#34;http://speckyboy.com/2011/02/23/10-completely-free-wireframing-and-mockup-tools/&#34; title=&#34;10 Free wireframing tools&#34;&gt;check out this post&lt;/a&gt; that lists a few free alternative products.&lt;/p&gt;
&lt;h2 id=&#34;microsoft-expression-blend&#34;&gt;Microsoft Expression Blend&lt;/h2&gt;
&lt;p&gt;Microsoft Produced a suite of tools to go with their Xaml/UI/UX offerings collectively known as Expression Studio, that includes Expression Design, Expression Web(more for html), Expression Media Encoder(more for streaming video) and Expression Blend.  Expression Blend is the main xaml development tool, and is essentially attempting to be Visual Studio for designers/&lt;a href=&#34;http://stackoverflow.com/questions/1428734/where-can-i-find-one-of-these-devigners-or-developer-designers&#34; title=&#34;Devigner&#34;&gt;devigners&lt;/a&gt; which supports solutions and most projects, but presents a designer-centric view for building and maintaining the xaml UI files for your applications.  This includes support for WPF, Silverlight and Silverlight for Windows Phone (and windows 8&amp;rsquo;s WinRT UI stuff).  One thing that was added to Blend around version 3 was Sketchflow. &lt;a href=&#34;http://res.cloudinary.com/csmacnz/image/upload/v1414277566/sketchflow_eo4ybx.png&#34;&gt;&lt;img src=&#34;http://res.cloudinary.com/csmacnz/image/upload/v1414277566/sketchflow_eo4ybx.png&#34; alt=&#34;Microsoft Expression Blend with Sketchflow&#34; title=&#34;sketchflow&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sketchflow is a plugin/extension style framework that builds wireframing into blend. Essentially you create a Sketchflow project which sets up all the things you need to have to build a Sketchflow application, and the UI gets a few extra panels, options for navigation, as well as a theme the sketch styles. These styles make your application look like it is hand drawn, instead of the usual polished controls. And thats where most of the hard work is. Apart from navigation and the sketchy look, you just appear to be in a development environment like any other Xaml based application. You have code behind, behaviours, xaml, drag and drop, and the full properties options and visual tree and the rest.&lt;/p&gt;
&lt;p&gt;The only other difference comes when you run it. Running your sketchflow app gives you the sketchflow player. This adds a left-hand-side to your application with a few cool options, and can be used for navigation (shows the links of where this page goes) and a feedback system which is pretty sweet. More on feedback later. Sketchflow has 2 flavours: WPF and Silverlight.  This has no reflection whatsoever on what the application you are designing is (although for reuse this could be important) but more of how you wish to distribute it.  If you go with a WPF Sketchflow Project, you get a desktop sketchflow application, that can be distributed in a zip file and runs on any machine with the correct version of .Net installed.  Easy enough to share if you don&amp;rsquo;t mind helping the odd person get .Net installed, if necessary.&lt;/p&gt;
&lt;p&gt;However, if you go with the Silverlight Sketchflow Project, you get a fully functional Silverlight Xap and html file.  Why this is cool, is that you can host this on your website. You could even take the xap and host it inside a blog post for a demo if you wanted to (and in fact I might when I go into depth with Sketchflow).  Users can go to your site (or other designated area, such as intranet) check out your wireframes, create some feedback, and save the feedback and send it to you in an email(or file share, or upload form etc).  Its a pretty neat way to distribute your wireframes for feedback I must say.&lt;/p&gt;
&lt;p&gt;Being a full fledged xaml application, you can build and use custom behaviours, write code-behind to perform other actions, and script sweet UX animations. As a developer, you can build up your own library of behaviours to speed up prototyping in your domain, or company, and make these available to the  rest of the team, developer and designer alike, to speed up prototyping, as well and being able to use them in your production build. This is the power of Sketchflow over something like Balsamiq Mockups. Your application becomes heavily interactive. How interactive is up to you. you can have something as simple as navigation links between screens, to a full fledged UI that has carousels, pivots, scrollbar areas, double-click support, complex transition animations, and be a full fledge prototype of your user experience, without the look and feel of being &amp;lsquo;complete&amp;rsquo;. It will continue to look like a hand drawn application but will live and breathe like a real application. Pretty swish and hot to impress your next client I reckon.&lt;/p&gt;
&lt;p&gt;I will also be following this section with at least one dedicated post with a quick demo and sample files.&lt;/p&gt;
&lt;h2 id=&#34;fun-tools&#34;&gt;Fun Tools&lt;/h2&gt;
&lt;p&gt;I stumbled on this great post for some cool placeholder image generation tools for putting fake images into your mockups. I had come across &lt;a href=&#34;http://placekitten.com&#34; title=&#34;placekitten.com&#34;&gt;placekitten.com&lt;/a&gt; which I thought was a great addition to the &lt;a href=&#34;http://placehold.it/&#34;&gt;placehold.it&lt;/a&gt; idea, as is &lt;a href=&#34;http://flickholdr.com&#34; title=&#34;FlickHolder&#34;&gt;flickholdr.com&lt;/a&gt;, pulling images off of &lt;a href=&#34;http://www.flickr.com/&#34; title=&#34;flickr photo sharing.&#34;&gt;flickr&lt;/a&gt;.  Here are some posts that list a few in greater detail.  There a few different ones that can be a bit of fun, and perhaps meet your own personal tastes.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.learnphponline.net/the-top-8-placeholder-services-for-web-designers/&#34;&gt;http://www.learnphponline.net/the-top-8-placeholder-services-for-web-designers/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://net.tutsplus.com/articles/web-roundups/the-top-8-placeholders-for-web-designers/&#34;&gt;http://net.tutsplus.com/articles/web-roundups/the-top-8-placeholders-for-web-designers/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Another fun thing to play with is generated text. &lt;a href=&#34;http://www.lipsum.com/&#34; title=&#34;lorum ipsum generator&#34;&gt;Lorum ipsum&lt;/a&gt; is the standard for generated text, and there are plenty of generaters on the web to choose from. But why not mix it up and try &lt;a href=&#34;http://baconipsum.com/&#34; title=&#34;bacon ipsum&#34;&gt;bacon ipsum&lt;/a&gt;, &lt;a href=&#34;http://slipsum.com/&#34; title=&#34;samual l. ipsum&#34;&gt;samual l. ipsum&lt;/a&gt; or &lt;a href=&#34;http://lorizzle.nl/&#34; title=&#34;gansta lorum ipsum&#34;&gt;gansta lorum ipsum&lt;/a&gt;? There are heaps more to choose from, and a few sites that have listed them are below.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.queness.com/post/9327/13-funny-and-useful-lorem-ipsum-generators&#34;&gt;http://www.queness.com/post/9327/13-funny-and-useful-lorem-ipsum-generators&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://mashable.com/2011/07/15/lorem-ipsum-generators/&#34;&gt;http://mashable.com/2011/07/15/lorem-ipsum-generators/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://designshack.net/articles/inspiration/30-useful-and-hilarious-lorem-ipsum-generators/&#34;&gt;http://designshack.net/articles/inspiration/30-useful-and-hilarious-lorem-ipsum-generators/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Bacon ipsum dolor sit amet est venison consectetur, ham hock sint cow voluptate deserunt hamburger sunt officia. Adipisicing pariatur dolore dolore filet mignon. Pig tail tenderloin pancetta. Et eu ham incididunt, leberkas ground round rump culpa proident beef ribs. Biltong capicola speck, eu aute culpa pork loin ball tip fugiat laborum jowl swine. Aliqua dolore in, quis duis eu ut shankle biltong brisket. Voluptate minim ut dolore, do adipisicing fatback. {Sorry, couldn&amp;rsquo;t resist}&lt;/p&gt;
&lt;p&gt;Slightly related to the whole mockups theme, I found this link for great Windows Phone 7 mockups and wireframing tools that you might find useful if you are doing any of that sort of thing like me. - &lt;a href=&#34;http://inspirationfeed.com/graphics/freebies/20-free-windows-phone-7-mockup-and-wireframing-resources/&#34;&gt;http://inspirationfeed.com/graphics/freebies/20-free-windows-phone-7-mockup-and-wireframing-resources/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;So that is what I have on mockups and sketches, and a few ways to add some life to your samples. As I said, I will follow this up with some demos on both Mockups and Blend with Sketchflow soon.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>